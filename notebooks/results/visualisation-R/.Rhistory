library(tidyverse)
results = read_csv("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/data/results/run_data_battery_1_time_2021-03-27-17-40-23.csv")
head(results)
melt(results)
pivot_longer(results)
head(results)
View(results)
pivot_longer(results, !datetime)
pivot_longer(results, !datetime | !X1)
pivot_longer(results, !c(datetime,X1))
results_long = pivot_longer(results, !c(datetime,X1))
results_long
results_long
ggplot(data=results_long, aes(x=datetime, y=value, color=name))
ggplot(data=results_long, aes(x=datetime, y=value, color=name)) + geom_line()
results$datetime = ymd_hms(results$datetime)
results$datetime = lubridate:ymd_hms(results$datetime)
results$datetime = lubridate::ymd_hms(results$datetime)
library(lubridate)
results$datetime = ymd_hms(results$datetime)
head(results)
results_long = pivot_longer(results, !c(datetime,X1))
results_long
ggplot(data=results_long, aes(x=datetime, y=value, color=name)) + geom_line()
ggplot(data=filter(results_long, datetime<"2012-01-09"), aes(x=datetime, y=value, color=name)) + geom_line()
ggplot(data=filter(results_long, datetime<"2012-01-09"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% select(current_charge,current_controlled_load_consumption,current_general_electricity_consumption,current_solar)
filtered_results_long = results_long %>% select(current_charge,current_controlled_load_consumption,current_general_electricity_consumption,current_solar)
rlange::last_error()
rlang::last_error()
filtered_results_long = results_long %>% filter(name in (current_charge,current_controlled_load_consumption,current_general_electricity_consumption,current_solar))
filtered_results_long = results_long %>% filter(name == c(current_charge,current_controlled_load_consumption,current_general_electricity_consumption,current_solar))
filtered_results_long = results_long %>% filter(name == c("current_charge","current_controlled_load_consumption","current_general_electricity_consumption",'current_solar'))
ggplot(data=filter(filtered_results_long, datetime<"2012-01-09"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(filtered_results_long, datetime<"2012-01-10"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("discharge_size","charge_load","charge_solar",'current_solar'))
ggplot(data=filter(filtered_results_long, datetime<"2012-01-10"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(filtered_results_long, datetime<"2012-01-11"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(filtered_results_long, datetime>"2012-01-09"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(filtered_results_long, datetime>"2012-01-09", datetime <"2012-01-09"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(filtered_results_long, datetime>"2012-01-09", datetime <"2012-01-11"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("current_charge","current_controlled_load_consumption","current_general_electricity_consumption",'current_solar'))
ggplot(data=filter(results_long, datetime<"2012-01-10"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("discharge_size","charge_load","charge_solar",'current_solar', "current_charge"))
ggplot(data=filter(filtered_results_long, datetime>"2012-01-09", datetime <"2012-01-11"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("discharge_size","charge_load","charge_solar",'current_solar', "current_charge", "current_controlled_load_consumption"))
ggplot(data=filter(filtered_results_long, datetime>"2012-01-09", datetime <"2012-01-11"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
results = read_csv("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/data/results/run_data_battery_1_time_2021-03-28-09-29-12.csv")
results$datetime = ymd_hms(results$datetime)
head(results)
results_long = pivot_longer(results, !c(datetime,X1))
results_long
ggplot(data=filter(results_long, datetime<"2012-01-10"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("current_charge","current_controlled_load_consumption","current_general_electricity_consumption",'current_solar'))
ggplot(data=filter(filtered_results_long, datetime<"2012-01-10"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw(
results = read_csv("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/data/results/run_data_battery_1_time_2021-03-28-09-29-12.csv")
results$datetime = ymd_hms(results$datetime)
head(results)
results_long = pivot_longer(results, !c(datetime,X1))
results_long
ggplot(data=filter(results_long, datetime<"2012-01-10"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("current_charge","current_controlled_load_consumption","current_general_electricity_consumption",'current_solar'))
ggplot(data=filter(filtered_results_long, datetime<"2012-01-10"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("discharge_size","charge_load","charge_solar",'current_solar', "current_charge", "current_controlled_load_consumption"))
ggplot(data=filter(filtered_results_long, datetime>"2012-01-09", datetime <"2012-01-11"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(filtered_results_long, datetime>"2012-01-09", datetime <"2012-01-11"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw(size=2)
ggplot(data=filter(filtered_results_long, datetime>"2012-01-09", datetime <"2012-01-11"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
results = read_csv("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/data/results/run_data_battery_1_time_2021-03-28-09-42-07.csv")
results$datetime = ymd_hms(results$datetime)
head(results)
results_long = pivot_longer(results, !c(datetime,X1))
results_long
ggplot(data=filter(results_long, datetime<"2012-01-10"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("current_charge","current_controlled_load_consumption","current_general_electricity_consumption",'current_solar'))
ggplot(data=filter(filtered_results_long, datetime<"2012-01-10"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("discharge_size","charge_load","charge_solar",'current_solar', "current_charge", "current_controlled_load_consumption"))
ggplot(data=filter(filtered_results_long, datetime>"2012-01-09", datetime <"2012-01-11"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
results = read_csv("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/data/results/run_data_battery_1_time_2021-03-28-10-15-15.csv")
results$datetime = ymd_hms(results$datetime)
head(results)
results_long = pivot_longer(results, !c(datetime,X1))
results_long
ggplot(data=filter(results_long, datetime<"2012-01-10"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("current_charge","current_controlled_load_consumption","current_general_electricity_consumption",'current_solar'))
ggplot(data=filter(filtered_results_long, datetime<"2012-01-10"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("discharge_size","charge_load","charge_solar",'current_solar', "current_charge", "current_controlled_load_consumption"))
ggplot(data=filter(filtered_results_long, datetime>"2012-01-09", datetime <"2012-01-11"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(filtered_results_long, datetime<"2012-01-09"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(results_long, datetime<"2012-01-09"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(results_long, datetime<"2012-01-08"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(results_long, datetime<"2012-01-09"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
results = read_csv("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/data/results/run_data_battery_1_time_2021-03-28-15-47-09.csv")
results$datetime = ymd_hms(results$datetime)
head(results)
results = results %>% rename(charge_solar = Solar Charge, charge_load = Electricty Charge, discharge_size = Discharge, current_solar = Solar Power, current_controlled_load_consumption = Controlled Electricity Demand, current_general_electricity_consumption = General Electricity Demand, current_charge = Battery Charge Level)
results = results %>% rename(charge_solar = `Solar Charge`, charge_load = Electricty Charge, discharge_size = Discharge, current_solar = Solar Power, current_controlled_load_consumption = Controlled Electricity Demand, current_general_electricity_consumption = General Electricity Demand, current_charge = Battery Charge Level)
results = results %>% rename(`Solar Charge` = charge_solar, `Electricty Charge` = charge_load, Discharge = discharge_size, `Solar Power` = current_solar, `Controlled Electricity Demand` = current_controlled_load_consumption, `General Electricity Demand` = current_general_electricity_consumption, `Battery Charge Level` = current_charge)
results_long = pivot_longer(results, !c(datetime,X1))
results_long
ggplot(data=filter(results_long, datetime<"2012-01-09"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(results_long, datetime<"2013-01-16"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
results = read_csv("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/data/results/run_data_battery_1_time_2021-03-28-15-47-09.csv")
results$datetime = ymd_hms(results$datetime)
head(results)
results = results %>% rename(`Solar Charge` = charge_solar, `Electricty Charge` = charge_load, Discharge = discharge_size, `Solar Power` = current_solar, `Controlled Electricity Demand` = current_controlled_load_consumption, `General Electricity Demand` = current_general_electricity_consumption, `Battery Charge Level` = current_charge)
results_long = pivot_longer(results, !c(datetime,X1))
results_long
ggplot(data=filter(results_long, datetime<"2013-01-16"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("Battery Charge Level", "Solar Power", "General Electricity Demand"))
ggplot(data=filter(filtered_results_long, datetime<"2012-01-09"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c(`Battery Charge Level`, `Solar Power`, `General Electricity Demand`))
ggplot(data=filter(filtered_results_long, datetime<"2012-01-09"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c(`Battery Charge Level`, `Solar Power`, `General Electricity Demand`))
filtered_results_long = results_long %>% filter(name == c("Battery Charge Level", "Solar Power", "General Electricity Demand"))
ggplot(data=filter(filtered_results_long, datetime<"2012-01-09"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(filtered_results_long, datetime<"2013-01-16"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("Battery Charge Level", "Solar Power", "General Electricity Demand", "Controlled Electricity Demand"))
ggplot(data=filter(filtered_results_long, datetime<"2013-01-16"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
ggplot(data=filter(filtered_results_long, datetime<"2013-01-16"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw() + xlab("Date and time") + ylab("Value kWh")
ggplot(data=filter(filtered_results_long, datetime<"2013-01-16"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw() + xlab("Date and time") + ylab("Value (kWh)")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
results = read_csv("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/data/results/run_data_battery_1.2_time_2021-03-28-16-55-35.csv")
results$datetime = ymd_hms(results$datetime)
head(results)
results = results %>% rename(`Solar Charge` = charge_solar, `Electricty Charge` = charge_load, Discharge = discharge_size, `Solar Power` = current_solar, `Controlled Electricity Demand` = current_controlled_load_consumption, `General Electricity Demand` = current_general_electricity_consumption, `Battery Charge Level` = current_charge)
results_long = pivot_longer(results, !c(datetime,X1))
results_long
ggplot(data=filter(results_long, datetime<"2013-01-16"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
filtered_results_long = results_long %>% filter(name == c("Battery Charge Level", "Solar Power", "General Electricity Demand", "Controlled Electricity Demand"))
ggplot(data=filter(filtered_results_long, datetime<"2013-01-16"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw() + xlab("Date and time") + ylab("Value (kWh)")
filtered_results_long = results_long %>% filter(name == c("discharge_size","charge_load","charge_solar",'current_solar', "current_charge", "current_controlled_load_consumption"))
ggplot(data=filter(filtered_results_long, datetime>"2012-01-09", datetime <"2012-01-11"), aes(x=datetime, y=value, color=name)) + geom_line() + theme_bw()
library(tidyverse)
training = read_csv("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/data/results/training/training_results.csv")
head(training)
head(training)
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=battery_size)) + geom_line()
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=battery_size, group=battery_size)) + geom_line()
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=battery_size, group=battery_size)) + geom_line() + theme_bw()
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=battery_size, group=battery_size)) + geom_line() + theme_bw() + scale_color_continuous(trans = 'reverse')
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=battery_size, group=battery_size)) + geom_line() + theme_bw() + scale_color_continuous(trans = 'reverse') + xlab("Total training iterations") + ylab("Mean episode reward")
library(tidyverse)
hyperparam = read_csv("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/data/interim/hyperparameter_training.csv")
head(hyperparam)
ggplot(data=hyperparam, aes(x="lr", y="episode_reward_mean", color="actor_hiddens"))
ggplot(data=hyperparam, aes(x="lr", y="episode_reward_mean", color="actor_hiddens"))+geom_scatter()
ggplot(data=hyperparam, aes(x="lr", y="episode_reward_mean", color="actor_hiddens"))+geom_point()
head(hyperparam)
#sns.lmplot(data=training[training.training_iteration==30], x="lr", y="episode_reward_mean", hue="actor_hiddens")
ggplot(data=filter(hyperparam, training_iteration==30), aes(x="lr", y="episode_reward_mean", color="actor_hiddens")) + geom_point()
#sns.lmplot(data=training[training.training_iteration==30], x="lr", y="episode_reward_mean", hue="actor_hiddens")
ggplot(data=filter(hyperparam, training_iteration==30), aes(x=lr, y=episode_reward_mean, color=actor_hiddens)) + geom_point()
#sns.lmplot(data=training[training.training_iteration==30], x="lr", y="episode_reward_mean", hue="actor_hiddens")
ggplot(data=filter(hyperparam, training_iteration==30), aes(x=lr, y=episode_reward_mean, color=actor_hiddens)) + geom_point() + geom_line()
#sns.lmplot(data=training[training.training_iteration==30], x="lr", y="episode_reward_mean", hue="actor_hiddens")
ggplot(data=filter(hyperparam, training_iteration==30), aes(x=lr, y=episode_reward_mean, color=actor_hiddens)) + geom_point() + geom_smooth()
?geom_smooth
#sns.lmplot(data=training[training.training_iteration==30], x="lr", y="episode_reward_mean", hue="actor_hiddens")
ggplot(data=filter(hyperparam, training_iteration==30), aes(x=lr, y=episode_reward_mean, color=actor_hiddens)) + geom_point() + geom_smooth(method="lm")
#sns.lmplot(data=training[training.training_iteration==30], x="lr", y="episode_reward_mean", hue="actor_hiddens")
ggplot(data=filter(hyperparam, training_iteration==30), aes(x=lr, y=episode_reward_mean, color=actor_hiddens)) + geom_point() + geom_smooth(method="lm") + theme_bw()
#sns.lmplot(data=training[training.training_iteration==30], x="lr", y="episode_reward_mean", hue="actor_hiddens")
ggplot(data=filter(hyperparam, training_iteration==30), aes(x=lr, y=episode_reward_mean, color=actor_hiddens)) + geom_point() + geom_smooth(method="lm") + theme_bw() + xlab("Learning rate") + ylab("Mean episode reward")
#sns.lmplot(data=training[training.training_iteration==30], x="lr", y="episode_reward_mean", hue="actor_hiddens")
ggplot(data=filter(hyperparam, training_iteration==30), aes(x=lr, y=episode_reward_mean, color=actor_hiddens)) + geom_point() + geom_smooth(method="lm") + theme_bw() + xlab("Learning rate") + ylab("Mean episode reward")
#sns.lmplot(data=training[training.training_iteration==30], x="lr", y="episode_reward_mean", hue="actor_hiddens")
ggplot(data=filter(hyperparam, training_iteration==30), aes(x=lr, y=episode_reward_mean, color=actor_hiddens)) + geom_point() + geom_smooth(method="lm") + theme_bw() + xlab("Learning rate") + ylab("Mean episode reward") + theme_classic() +theme(text = element_text(size=18))+ theme(aspect.ratio = 1, plot.margin=grid::unit(c(0,0,0,0), "mm"))
ggsave("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/reports/figures/hyperparameter_plot.pdf", dpi=1000)
#sns.lmplot(data=training[training.training_iteration==30], x="lr", y="episode_reward_mean", hue="actor_hiddens")
ggplot(data=filter(hyperparam, training_iteration==30), aes(x=lr, y=episode_reward_mean, color=actor_hiddens)) + geom_point() + geom_smooth(method="lm") + theme_bw() + xlab("Learning rate") + ylab("Mean episode reward") + theme_classic() +theme(text = element_text(size=18))+ theme(aspect.ratio = 1, plot.margin=grid::unit(c(0,0,0,0), "mm")) + scale_fill_continuous(guide = guide_legend()) +
theme(legend.position="bottom")
#sns.lmplot(data=training[training.training_iteration==30], x="lr", y="episode_reward_mean", hue="actor_hiddens")
ggplot(data=filter(hyperparam, training_iteration==30), aes(x=lr, y=episode_reward_mean, color=actor_hiddens)) + geom_point() + geom_smooth(method="lm") + theme_bw() + xlab("Learning rate") + ylab("Mean episode reward") + theme_classic() +theme(text = element_text(size=18)) + scale_fill_continuous(guide = guide_legend()) +
theme(legend.position="bottom")
ggsave("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/reports/figures/hyperparameter_plot.pdf", dpi=1000)
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=battery_size, group=battery_size)) + geom_line() + theme_bw() + scale_color_continuous(trans = 'reverse') + xlab("Total training iterations") + ylab("Mean episode reward")
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=battery_size, group=battery_size)) + geom_line() + theme_classic() + scale_color_continuous(trans = 'reverse') + xlab("Total training iterations") + ylab("Mean episode reward")
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=battery_size, group=battery_size)) + geom_line() + theme_classic()+theme(text = element_text(size=18)) + scale_color_continuous(trans = 'reverse') + xlab("Total training iterations") + ylab("Mean episode reward")
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=battery_size, group=battery_size)) + geom_line() + theme_classic()+theme(text = element_text(size=18)) + scale_color_continuous(trans = 'reverse') + xlab("Total training iterations") + ylab("Mean episode reward")+ scale_fill_continuous(guide = guide_legend()) +
theme(legend.position="bottom")
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=battery_size, group=battery_size)) + geom_line() + theme_classic()+theme(text = element_text(size=18)) + scale_color_continuous(trans = 'reverse') + xlab("Total training iterations") + ylab("Mean episode reward")
ggsave("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/reports/figures/rewards_over_time.pdf", dpi=1000)
training$`Battery size` = training$battery_size
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=battery_size, group=battery_size)) + geom_line() + theme_classic()+theme(text = element_text(size=18)) + scale_color_continuous(trans = 'reverse') + xlab("Total training iterations") + ylab("Mean episode reward")
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=battery_size, group=`Battery size`)) + geom_line() + theme_classic()+theme(text = element_text(size=18)) + scale_color_continuous(trans = 'reverse') + xlab("Total training iterations") + ylab("Mean episode reward")
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=`Battery size`, group=`Battery size`)) + geom_line() + theme_classic()+theme(text = element_text(size=18)) + scale_color_continuous(trans = 'reverse') + xlab("Total training iterations") + ylab("Mean episode reward")
ggsave("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/reports/figures/rewards_over_time.pdf", dpi=1000)
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=`Battery size`, group=`Battery size`)) + geom_line() + theme_classic()+theme(text = element_text(size=18)) + scale_color_continuous(trans = 'reverse') + xlab("Total training iterations") + ylab("Mean episode reward")+ scale_fill_continuous(guide = guide_legend()) +
theme(legend.position="bottom")
ggsave("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/reports/figures/rewards_over_time.pdf", dpi=1000)
ggplot(data=training, aes(x=training_iteration, y=episode_reward_mean, color=`Battery size`, group=`Battery size`)) + geom_line() + theme_classic()+theme(text = element_text(size=18))  + xlab("Total training iterations") + ylab("Mean episode reward")+ scale_fill_continuous(guide = guide_legend()) +
theme(legend.position="bottom")
ggsave("/Users/alexanderkell/Documents/PhD/Projects/18-battery-optimisation/reports/figures/rewards_over_time.pdf", dpi=1000)
